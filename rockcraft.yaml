name: seldon-core-s2i
summary: Run s2i for Seldon Core
description: |
  Seldon core converts your ML modelsoperatonr (Tensorflow, Pytorch, H2o, etc.) or
  language wrappers (Python, Java, etc.) into production REST/GRPC
  microservices.

  Seldon handles scaling to thousands of production machine learning models and
  provides advanced machine learning capabilities out of the box including
  Advanced Metrics, Request Logging, Explainers, Outlier Detectors, A/B Tests,
  Canaries and more.

version: "1.16.0"
license: Apache-2.0
base: ubuntu:22.04
platforms:
  amd64:

services:
  manager:
    override: replace
    command: /opt/seldon-core-operator/manager --enable-leader-election --webhook-port 4443 --create-resources true
    startup: enabled
    user: seldon

parts:
  deps:
    plugin: nil
    stage-packages:
      - wget
      - libsm6
      - libxext6
      - libxrender-dev
      - libglib2.0-0
      - git
      - build-essential
      - make
      - automake
    override-stage: |
      set -xe

      CONDA_REPO="https://repo.anaconda.com/miniconda"
      CONDA_TARGET="Linux-x86_64"
      CONDA_DOWNLOAD_VERSION="py38_4.12.0"
      CONDA_VERSION="4.13.0"
      PYTHON_VERSION="3.8"

      curl \
          https://github.com/certifi/python-certifi/archive/master.tar.gz \
          -o certifi-python-certifi.tar.gz

      curl \
          ${CONDA_REPO}/Miniconda3-${CONDA_DOWNLOAD_VERSION}-${CONDA_TARGET}.sh \
          -o ~/miniconda.sh
      
      chmod +x ~/miniconda.sh
      ~/miniconda.sh -b -p /opt/conda
      rm ~/miniconda.sh
      
      /opt/conda/bin/conda install --yes conda=${CONDA_VERSION}
      /opt/conda/bin/conda clean -tipy
      
      ln -s \
          /opt/conda/etc/profile.d/conda.sh \
          /etc/profile.d/conda.sh
          
      echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
      echo "conda activate base" >> ~/.bashrc
      chgrp -R root /opt/conda && chmod -R g+rw /opt/conda

      /opt/conda/bin/conda install \
          -c conda-forge \
          --yes \
          python=$PYTHON_VERSION \
          conda=$CONDA_VERSION
      
      export PATH=/opt/conda/bin:${PATH}
      echo "export PATH=/opt/conda/bin:${PATH}" >> ~/.bashrc

      conda init bash
      bash -c "conda activate base"
  s2i:
    after: [deps]
    plugin: nil
    source: https://github.com/SeldonIO/seldon-core
    source-type: git
    source-tag: v1.16.0
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/s2i/bin
      
      install -D -m755 \
          wrappers/s2i/python/s2i/bin/assemble \
          ${CRAFT_PART_INSTALL}/s2i/bin/assemble
      
      install -D -m755 \
          wrappers/s2i/python/s2i/bin/run \
          ${CRAFT_PART_INSTALL}/s2i/bin/run
      
      install -D -m755 \
          wrappers/s2i/python/s2i/bin/save-artifacts \
          ${CRAFT_PART_INSTALL}/s2i/bin/save-artifacts
      
      install -D -m755 \
          wrappers/s2i/python/s2i/bin/usage \
          ${CRAFT_PART_INSTALL}/s2i/bin/usage

  conda:
    after: [deps]
    plugin: nil
    source: https://github.com/SeldonIO/seldon-core
    source-type: git
    source-tag: v1.16.0
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/microservice
      cp -R ./python ${CRAFT_PART_INSTALL}/microservice/python
      cd ${CRAFT_PART_INSTALL}/microservice/python
      pip install .
      mkdir -p ${CRAFT_PART_INSTALL}/.conda
      chmod a+rwx ${CRAFT_PART_INSTALL}/.conda
      chown -R 8888 ${CRAFT_PART_INSTALL}/microservice
      ${CRAFT_PART_INSTALL}/opt/conda/bin/conda clean --yes --index-cache